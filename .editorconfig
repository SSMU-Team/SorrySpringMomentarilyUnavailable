# Supprimer la ligne ci-dessous si vous voulez hériter les paramètres .editorconfig des répertoires supérieurs
root = true

# Fichiers C#
[*.cs]

#### Options EditorConfig principales ####

# Indentation et espacement
indent_size = 4
indent_style = tab
tab_width = 4

# Préférences de nouvelle ligne
end_of_line = crlf
insert_final_newline = false

#### Conventions de codage .NET ####

# Organiser les instructions Using
dotnet_separate_import_directive_groups = true
dotnet_sort_system_directives_first = true
file_header_template = unset

# Préférences de this. et Me.
dotnet_style_qualification_for_event = false
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_property = false

# Préférences des mots clés de langage par rapport aux types BCL
dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true

# Préférences de parenthèses
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_operators = never_if_unnecessary
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning

# Préférences de modificateur
dotnet_style_require_accessibility_modifiers = for_non_interface_members

# Préférences de niveau expression
dotnet_style_coalesce_expression = false:warning
dotnet_style_collection_initializer = true:silent
dotnet_style_explicit_tuple_names = true:silent
dotnet_style_null_propagation = false:warning
dotnet_style_object_initializer = true:silent
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true
dotnet_style_prefer_compound_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_assignment = true
dotnet_style_prefer_conditional_expression_over_return = true
dotnet_style_prefer_inferred_anonymous_type_member_names = true:silent
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_is_null_check_over_reference_equality_method = false:warning
dotnet_style_prefer_simplified_boolean_expressions = true:silent
dotnet_style_prefer_simplified_interpolation = true

# Préférences de champ
dotnet_style_readonly_field = false:warning

# Préférences de paramètre
dotnet_code_quality_unused_parameters = non_public:silent

# Préférences de suppression
dotnet_remove_unnecessary_suppression_exclusions = none

#### Conventions de codage C# ####

# Préférences de var
csharp_style_var_elsewhere = false:warning
csharp_style_var_for_built_in_types = false:warning
csharp_style_var_when_type_is_apparent = false:warning

# Membres expression-bodied
csharp_style_expression_bodied_accessors = true
csharp_style_expression_bodied_constructors = false
csharp_style_expression_bodied_indexers = true
csharp_style_expression_bodied_lambdas = true
csharp_style_expression_bodied_local_functions = true
csharp_style_expression_bodied_methods = false
csharp_style_expression_bodied_operators = true
csharp_style_expression_bodied_properties = true

# Préférences correspondants au modèle
csharp_style_pattern_matching_over_as_with_null_check = true
csharp_style_pattern_matching_over_is_with_cast_check = true
csharp_style_prefer_not_pattern = true
csharp_style_prefer_pattern_matching = false
csharp_style_prefer_switch_expression = false:silent

# Préférences de vérification de valeur Null
csharp_style_conditional_delegate_call = false:warning

# Préférences de modificateur
csharp_prefer_static_local_function = true:silent
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

# Préférences de bloc de code
csharp_prefer_braces = true
csharp_prefer_simple_using_statement = false:silent

# Préférences de niveau expression
csharp_prefer_simple_default_expression = true
csharp_style_deconstructed_variable_declaration = true:silent
csharp_style_implicit_object_creation_when_type_is_apparent = true
csharp_style_inlined_variable_declaration = true:silent
csharp_style_pattern_local_over_anonymous_function = true:silent
csharp_style_prefer_index_operator = false
csharp_style_prefer_range_operator = false
csharp_style_throw_expression = false:silent
csharp_style_unused_value_assignment_preference = unused_local_variable:silent
csharp_style_unused_value_expression_statement_preference = discard_variable

# Préférences pour la directive 'using'
csharp_using_directive_placement = outside_namespace

#### Règles de formatage C# ####

# Préférences de nouvelle ligne
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Préférences de mise en retrait
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Préférences d'espace
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Préférences d'enveloppement
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

#### Styles de nommage ####

# Règles de nommage

dotnet_naming_rule.interface_should_be_commence_par_i.severity = warning
dotnet_naming_rule.interface_should_be_commence_par_i.symbols = interface
dotnet_naming_rule.interface_should_be_commence_par_i.style = commence_par_i

dotnet_naming_rule.method_should_be_méthode.severity = warning
dotnet_naming_rule.method_should_be_méthode.symbols = method
dotnet_naming_rule.method_should_be_méthode.style = méthode

dotnet_naming_rule.champ_privé_ou_interne_should_be_variable_private.severity = warning
dotnet_naming_rule.champ_privé_ou_interne_should_be_variable_private.symbols = champ_privé_ou_interne
dotnet_naming_rule.champ_privé_ou_interne_should_be_variable_private.style = variable_private

dotnet_naming_rule.champ_public_ou_protégé_should_be_variable_public_protected.severity = warning
dotnet_naming_rule.champ_public_ou_protégé_should_be_variable_public_protected.symbols = champ_public_ou_protégé
dotnet_naming_rule.champ_public_ou_protégé_should_be_variable_public_protected.style = variable_public_protected

dotnet_naming_rule.membres_autres_que_des_champs_should_be_casse_pascal.severity = warning
dotnet_naming_rule.membres_autres_que_des_champs_should_be_casse_pascal.symbols = membres_autres_que_des_champs
dotnet_naming_rule.membres_autres_que_des_champs_should_be_casse_pascal.style = casse_pascal

dotnet_naming_rule.localvariable_should_be_variable.severity = warning
dotnet_naming_rule.localvariable_should_be_variable.symbols = localvariable
dotnet_naming_rule.localvariable_should_be_variable.style = variable

dotnet_naming_rule.property_should_be_properties.severity = warning
dotnet_naming_rule.property_should_be_properties.symbols = property
dotnet_naming_rule.property_should_be_properties.style = properties

dotnet_naming_rule.event_should_be_event.severity = warning
dotnet_naming_rule.event_should_be_event.symbols = event
dotnet_naming_rule.event_should_be_event.style = event

dotnet_naming_rule.class_should_be_casse_pascal.severity = warning
dotnet_naming_rule.class_should_be_casse_pascal.symbols = class
dotnet_naming_rule.class_should_be_casse_pascal.style = casse_pascal

dotnet_naming_rule.struct_should_be_casse_pascal.severity = warning
dotnet_naming_rule.struct_should_be_casse_pascal.symbols = struct
dotnet_naming_rule.struct_should_be_casse_pascal.style = casse_pascal

dotnet_naming_rule.enum_should_be_casse_pascal.severity = warning
dotnet_naming_rule.enum_should_be_casse_pascal.symbols = enum
dotnet_naming_rule.enum_should_be_casse_pascal.style = casse_pascal

dotnet_naming_rule.types_should_be_casse_pascal.severity = warning
dotnet_naming_rule.types_should_be_casse_pascal.symbols = types
dotnet_naming_rule.types_should_be_casse_pascal.style = casse_pascal

# Spécifications de symboles

dotnet_naming_symbols.class.applicable_kinds = class
dotnet_naming_symbols.class.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.class.required_modifiers = 

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.struct.applicable_kinds = struct
dotnet_naming_symbols.struct.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.struct.required_modifiers = 

dotnet_naming_symbols.enum.applicable_kinds = enum
dotnet_naming_symbols.enum.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.enum.required_modifiers = 

dotnet_naming_symbols.event.applicable_kinds = event
dotnet_naming_symbols.event.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.event.required_modifiers = 

dotnet_naming_symbols.method.applicable_kinds = method
dotnet_naming_symbols.method.applicable_accessibilities = public
dotnet_naming_symbols.method.required_modifiers = 

dotnet_naming_symbols.property.applicable_kinds = property
dotnet_naming_symbols.property.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.property.required_modifiers = 

dotnet_naming_symbols.champ_public_ou_protégé.applicable_kinds = field
dotnet_naming_symbols.champ_public_ou_protégé.applicable_accessibilities = public, protected
dotnet_naming_symbols.champ_public_ou_protégé.required_modifiers = 

dotnet_naming_symbols.champ_privé_ou_interne.applicable_kinds = field
dotnet_naming_symbols.champ_privé_ou_interne.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.champ_privé_ou_interne.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.membres_autres_que_des_champs.applicable_kinds = property, event, method
dotnet_naming_symbols.membres_autres_que_des_champs.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.membres_autres_que_des_champs.required_modifiers = 

dotnet_naming_symbols.localvariable.applicable_kinds = parameter, local
dotnet_naming_symbols.localvariable.applicable_accessibilities = local
dotnet_naming_symbols.localvariable.required_modifiers = 

# Styles de nommage

dotnet_naming_style.casse_pascal.required_prefix = 
dotnet_naming_style.casse_pascal.required_suffix = 
dotnet_naming_style.casse_pascal.word_separator = 
dotnet_naming_style.casse_pascal.capitalization = pascal_case

dotnet_naming_style.commence_par_i.required_prefix = I
dotnet_naming_style.commence_par_i.required_suffix = 
dotnet_naming_style.commence_par_i.word_separator = 
dotnet_naming_style.commence_par_i.capitalization = pascal_case

dotnet_naming_style.variable_private.required_prefix = m_
dotnet_naming_style.variable_private.required_suffix = 
dotnet_naming_style.variable_private.word_separator = 
dotnet_naming_style.variable_private.capitalization = camel_case

dotnet_naming_style.variable_public_protected.required_prefix = 
dotnet_naming_style.variable_public_protected.required_suffix = 
dotnet_naming_style.variable_public_protected.word_separator = 
dotnet_naming_style.variable_public_protected.capitalization = camel_case

dotnet_naming_style.méthode.required_prefix = 
dotnet_naming_style.méthode.required_suffix = 
dotnet_naming_style.méthode.word_separator = 
dotnet_naming_style.méthode.capitalization = pascal_case

dotnet_naming_style.variable.required_prefix = 
dotnet_naming_style.variable.required_suffix = 
dotnet_naming_style.variable.word_separator = _
dotnet_naming_style.variable.capitalization = all_lower

dotnet_naming_style.event.required_prefix = 
dotnet_naming_style.event.required_suffix = Event
dotnet_naming_style.event.word_separator = 
dotnet_naming_style.event.capitalization = pascal_case

dotnet_naming_style.properties.required_prefix = 
dotnet_naming_style.properties.required_suffix = 
dotnet_naming_style.properties.word_separator = 
dotnet_naming_style.properties.capitalization = pascal_case
