using UnityEditor;
using UnityEngine;

namespace CustomEvents
{
    [CustomEditor(typeof(#OBJECT_INSPECTED#), true), CanEditMultipleObjects]
    public class #SCRIPTNAME#: Editor
    {
        private #TYPE# m_parameter;
        private #OBJECT_INSPECTED#[] m_objs;

        public void OnEnable()
        {
            //Multi object management
            Object[] target_cast = targets;
            m_objs = new #OBJECT_INSPECTED#[targets.Length];
            int i = 0;
            foreach (Object o in targets)
            {
                m_objs[i] = (#OBJECT_INSPECTED#)o;
                i++;
            }
        }

        public override void OnInspectorGUI()
        {
            DrawDefaultInspector();
            m_parameter = EditorGUILayout.#TYPE#Field("m_parameter :", m_parameter);
            EditorGUILayout.Separator();
            if (GUILayout.Button("Invoke event"))
            {
                foreach (#OBJECT_INSPECTED# e in m_objs)
                {
                    e.Invoke(m_parameter);
                }
            }
        }
    }
}
