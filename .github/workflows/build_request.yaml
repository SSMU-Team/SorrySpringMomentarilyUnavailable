name: Request Build

on: workflow_dispatch

jobs:

  tests:
      name: Tests ${{ matrix.testMode }}
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
        matrix:
          testMode:
            - playmode
            - editmode
      steps:
        # Checkout
        - name: Checkout repository
          uses: actions/checkout@v2
          with:
            fetch-depth: 0
        # Cache
        - uses: actions/cache@v2
          with:
            path: Library
            key: Library-Test
            restore-keys: Library-Test
        # Test
        - name: Run tests
          uses: game-ci/unity-test-runner@v2
          env:
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          with:
            githubToken: ${{ secrets.GITHUB_TOKEN }}
            testMode: ${{ matrix.testMode }}
            artifactsPath: ${{ matrix.testMode }}-artifacts
            checkName: Test Results ${{ matrix.testMode }}
          id: test-out
        # Output
        - uses: actions/upload-artifact@v2
          if: always()
          with:
            name: Test results for ${{ matrix.testMode }}
            path: ${{ steps.test-out.outputs.artifactsPath }}

  create-tag:
    name: Create tag
    runs-on: ubuntu-latest
    needs: tests
    outputs:
      tag: ${{ steps.version.outputs.tag }}
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Tag
      - name: Tag creation
        uses: phish108/autotag-action@1.1.37
        with:
          github-token: ${{ secrets.GITHUB_TOKEN}}
          release-branch: "master,main,develop"
        id: version

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        targetPlatform:
          - StandaloneWindows
          - StandaloneWindows64
          - StandaloneLinux64
    needs: create-tag
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Cache
      - uses: actions/cache@v2
        with:
          path: |
            Library
            build
          key: Library
          restore-keys: Library
      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          allowDirtyBuild: true
      # Zip
      - name: Zip build
        run: |
          pushd build/${{ matrix.targetPlatform }}
          zip -r ../../Build-${{ matrix.targetPlatform }}-${{ needs.create-tag.outputs.tag }}.zip .
          popd
      # Output Zip
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}-${{ needs.create-tag.outputs.tag }}.zip
          path: ./Build-${{ matrix.targetPlatform }}-${{ needs.create-tag.outputs.tag }}.zip